This is pdfTeX, Version 3.1415926-2.5-1.40.14 (TeX Live 2013) (format=pdflatex 2014.1.27)  11 FEB 2014 22:38
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**/home/derkoenig/2014_zhang/latex/chapter-1/chapter-1.tex
(/home/derkoenig/2014_zhang/latex/chapter-1/chapter-1.tex
LaTeX2e <2011/06/27>
Babel <3.9f> and hyphenation patterns for 2 languages loaded.
(/usr/share/texmf-dist/tex/latex/subfiles/subfiles.cls
Document Class: subfiles 2012/05/23 Federico Garcia
(/usr/share/texmf-dist/tex/latex/tools/verbatim.sty
Package: verbatim 2003/08/22 v1.5q LaTeX2e package for verbatim enhancements
\every@verbatim=\toks14
\verbatim@line=\toks15
\verbatim@in@stream=\read1
)
Preamble taken from file `../zhang_thesis.tex'
(../zhang_thesis.tex

! LaTeX Error: File `psuthesis.cls' not found.

Type X to quit or <RETURN> to proceed,
or enter new name. (Default extension: cls)

Enter file name: 
(/usr/share/texmf-dist/tex/latex/subfiles/subfiles.sty
Package: subfiles 2012/05/23 Federico Garcia
)
(/usr/share/texmf-dist/tex/latex/base/fontenc.sty
Package: fontenc 2005/09/27 v1.99g Standard LaTeX package

(/usr/share/texmf-dist/tex/latex/base/t1enc.def
File: t1enc.def 2005/09/27 v1.99g Standard LaTeX file
LaTeX Font Info:    Redeclaring font encoding T1 on input line 43.
))
(/usr/share/texmf-dist/tex/latex/amsmath/amsmath.sty
Package: amsmath 2013/01/14 v2.14 AMS math features
\@mathmargin=\skip41

For additional information on amsmath, use the `?' option.
(/usr/share/texmf-dist/tex/latex/amsmath/amstext.sty
Package: amstext 2000/06/29 v2.01

(/usr/share/texmf-dist/tex/latex/amsmath/amsgen.sty
File: amsgen.sty 1999/11/30 v2.0
\@emptytoks=\toks16
\ex@=\dimen102
))
(/usr/share/texmf-dist/tex/latex/amsmath/amsbsy.sty
Package: amsbsy 1999/11/29 v1.2d
\pmbraise@=\dimen103
)
(/usr/share/texmf-dist/tex/latex/amsmath/amsopn.sty
Package: amsopn 1999/12/14 v2.01 operator names
)
\inf@bad=\count79
LaTeX Info: Redefining \frac on input line 210.
\uproot@=\count80
\leftroot@=\count81
LaTeX Info: Redefining \overline on input line 306.
\classnum@=\count82
\DOTSCASE@=\count83
LaTeX Info: Redefining \ldots on input line 378.
LaTeX Info: Redefining \dots on input line 381.
LaTeX Info: Redefining \cdots on input line 466.
\Mathstrutbox@=\box26
\strutbox@=\box27
\big@size=\dimen104
LaTeX Font Info:    Redeclaring font encoding OML on input line 566.
LaTeX Font Info:    Redeclaring font encoding OMS on input line 567.
\macc@depth=\count84
\c@MaxMatrixCols=\count85
\dotsspace@=\muskip10
\c@parentequation=\count86
\dspbrk@lvl=\count87
\tag@help=\toks17
\row@=\count88
\column@=\count89
\maxfields@=\count90
\andhelp@=\toks18
\eqnshift@=\dimen105
\alignsep@=\dimen106
\tagshift@=\dimen107
\tagwidth@=\dimen108
\totwidth@=\dimen109
\lineht@=\dimen110
\@envbody=\toks19
\multlinegap=\skip42
\multlinetaggap=\skip43
\mathdisplay@stack=\toks20
LaTeX Info: Redefining \[ on input line 2665.
LaTeX Info: Redefining \] on input line 2666.
)
(/usr/share/texmf-dist/tex/latex/amsfonts/amssymb.sty
Package: amssymb 2013/01/14 v3.01 AMS font symbols

(/usr/share/texmf-dist/tex/latex/amsfonts/amsfonts.sty
Package: amsfonts 2013/01/14 v3.01 Basic AMSFonts support
\symAMSa=\mathgroup4
\symAMSb=\mathgroup5
LaTeX Font Info:    Overwriting math alphabet `\mathfrak' in version `bold'
(Font)                  U/euf/m/n --> U/euf/b/n on input line 106.
))
(/usr/share/texmf-dist/tex/latex/amscls/amsthm.sty
Package: amsthm 2004/08/06 v2.20
\thm@style=\toks21
\thm@bodyfont=\toks22
\thm@headfont=\toks23
\thm@notefont=\toks24
\thm@headpunct=\toks25
\thm@preskip=\skip44
\thm@postskip=\skip45
\thm@headsep=\skip46
\dth@everypar=\toks26
)
(/usr/share/texmf-dist/tex/latex/eqlist/eqlist.sty
eqlist.sty by M. Vaeth: Revision 2.1
Package: eqlist 2002/08/15 v2.1
(/usr/share/texmf-dist/tex/latex/eqparbox/eqparbox.sty
Package: eqparbox 2013/03/15 v4.0 Create equal-widthed boxes
\eqp@tempdima=\skip47
\eqp@tempdimb=\skip48

(/usr/share/texmf-dist/tex/latex/tools/array.sty
Package: array 2008/09/09 v2.4c Tabular extension package (FMi)
\col@sep=\dimen111
\extrarowheight=\dimen112
\NC@list=\toks27
\extratabsurround=\skip49
\backup@length=\skip50
)
\eqp@tabular@box=\box28
\eqp@list@box=\box29
\eqp@list@indent=\skip51

(/usr/share/texmf-dist/tex/latex/environ/environ.sty
Package: environ 2013/04/01 v0.3 A new environment syntax

(/usr/share/texmf-dist/tex/latex/trimspaces/trimspaces.sty
Package: trimspaces 2009/09/17 v1.1 Trim spaces around a token list
)))
\eql@cnt=\count91
)
(/usr/share/texmf-dist/tex/latex/graphics/color.sty
Package: color 2005/11/14 v1.0j Standard LaTeX Color (DPC)

(/usr/share/texmf-dist/tex/latex/latexconfig/color.cfg
File: color.cfg 2007/01/18 v1.5 color configuration of teTeX/TeXLive
)
Package color Info: Driver file: pdftex.def on input line 130.

(/usr/share/texmf-dist/tex/latex/pdftex-def/pdftex.def
File: pdftex.def 2011/05/27 v0.06d Graphics/color for pdfTeX

(/usr/share/texmf-dist/tex/generic/oberdiek/infwarerr.sty
Package: infwarerr 2010/04/08 v1.3 Providing info/warning/error messages (HO)
)
(/usr/share/texmf-dist/tex/generic/oberdiek/ltxcmds.sty
Package: ltxcmds 2011/11/09 v1.22 LaTeX kernel commands for general use (HO)
)
\Gread@gobject=\count92
)
(/usr/share/texmf-dist/tex/latex/graphics/dvipsnam.def
File: dvipsnam.def 1999/02/16 v3.0i Driver-dependant file (DPC,SPQR)
))
(/usr/share/texmf-dist/tex/latex/psfrag/psfrag.sty
Package: psfrag 1998/04/11 v3.04 PSfrag (MCG)

(/usr/share/texmf-dist/tex/latex/graphics/graphics.sty
Package: graphics 2009/02/05 v1.0o Standard LaTeX Graphics (DPC,SPQR)

(/usr/share/texmf-dist/tex/latex/graphics/trig.sty
Package: trig 1999/03/16 v1.09 sin cos tan (DPC)
)
(/usr/share/texmf-dist/tex/latex/latexconfig/graphics.cfg
File: graphics.cfg 2010/04/23 v1.9 graphics configuration of TeX Live
)
Package graphics Info: Driver file: pdftex.def on input line 91.
)
\pfg@pcount=\count93
\pfg@scount=\count94
\pfg@temp=\write3
)
(/usr/share/texmf-dist/tex/latex/tools/varioref.sty
Package: varioref 2011/10/02 v1.4z package for extended references (FMi)
\c@vrcnt=\count95
)
(/usr/share/texmf-dist/tex/latex/booktabs/booktabs.sty
Package: booktabs 2005/04/14 v1.61803 publication quality tables
\heavyrulewidth=\dimen113
\lightrulewidth=\dimen114
\cmidrulewidth=\dimen115
\belowrulesep=\dimen116
\belowbottomsep=\dimen117
\aboverulesep=\dimen118
\abovetopsep=\dimen119
\cmidrulesep=\dimen120
\cmidrulekern=\dimen121
\defaultaddspace=\dimen122
\@cmidla=\count96
\@cmidlb=\count97
\@aboverulesep=\dimen123
\@belowrulesep=\dimen124
\@thisruleclass=\count98
\@lastruleclass=\count99
\@thisrulewidth=\dimen125
)
(/usr/share/texmf-dist/tex/latex/mhchem/mhchem.sty
Package: mhchem 2013/06/17 v3.12 for typesetting chemical formulae

(/usr/share/texmf-dist/tex/latex/base/ifthen.sty
Package: ifthen 2001/05/26 v1.1c Standard LaTeX ifthen package (DPC)
)
(/usr/share/texmf-dist/tex/latex/tools/calc.sty
Package: calc 2007/08/22 v4.3 Infix arithmetic (KKT,FJ)
\calc@Acount=\count100
\calc@Bcount=\count101
\calc@Adimen=\dimen126
\calc@Bdimen=\dimen127
\calc@Askip=\skip52
\calc@Bskip=\skip53
LaTeX Info: Redefining \setlength on input line 76.
LaTeX Info: Redefining \addtolength on input line 77.
\calc@Ccount=\count102
\calc@Cskip=\skip54
)
(/usr/share/texmf-dist/tex/latex/oberdiek/twoopt.sty
Package: twoopt 2008/08/11 v1.5 Definitions with two optional arguments (HO)
)
(/usr/share/texmf-dist/tex/latex/graphics/keyval.sty
Package: keyval 1999/03/16 v1.13 key=value parser (DPC)
\KV@toks@=\toks28
)
(/usr/share/texmf-dist/tex/generic/oberdiek/pdftexcmds.sty
Package: pdftexcmds 2011/11/29 v0.20 Utility functions of pdfTeX for LuaTeX (HO
)

(/usr/share/texmf-dist/tex/generic/oberdiek/ifluatex.sty
Package: ifluatex 2010/03/01 v1.3 Provides the ifluatex switch (HO)
Package ifluatex Info: LuaTeX not detected.
)
(/usr/share/texmf-dist/tex/generic/oberdiek/ifpdf.sty
Package: ifpdf 2011/01/30 v2.3 Provides the ifpdf switch (HO)
Package ifpdf Info: pdfTeX in PDF mode is detected.
)
Package pdftexcmds Info: LuaTeX not detected.
Package pdftexcmds Info: \pdf@primitive is available.
Package pdftexcmds Info: \pdf@ifprimitive is available.
Package pdftexcmds Info: \pdfdraftmode found.
)
\mhchem@ce@result=\toks29
\mhchem@ce@part=\toks30
\mhchem@arrow@deployType=\toks31
\mhchem@arrow@params=\toks32
\mhchem@arrowlength@pgf=\skip55
\mhchem@bondwidth=\skip56
\mhchem@bondheight=\skip57
\mhchem@smallbondwidth@tmpA=\skip58
\mhchem@smallbondwidth@tmpB=\skip59
\mhchem@smallbondwidth=\skip60
\mhchem@cf@result=\toks33
\mhchem@cf@element=\toks34
\mhchem@cf@amount=\toks35
\mhchem@cf@sup=\toks36
\mhchem@cf@presub=\toks37
\mhchem@cf@presup=\toks38
\mhchem@cf@replaceMath@result=\toks39
\mhchem@cf@replaceMathMinusDot@result=\toks40
\mhchem@prepostscript@tmp@i=\skip61
\mhchem@prepostscript@tmp@ii=\skip62
\mhchem@mathbox@tmp@i=\skip63
\mhchem@mathbox@tmp@ii=\skip64
\mhchem@minispace@tmp=\skip65
\mhchem@option@minussidebearingleft=\skip66
\mhchem@option@minussidebearingright=\skip67
)
(/usr/share/texmf-dist/tex/latex/subfig/subfig.sty
Package: subfig 2005/06/28 ver: 1.3 subfig package

(/usr/share/texmf-dist/tex/latex/caption/caption3.sty
Package: caption3 2013/05/02 v1.6-88 caption3 kernel (AR)
Package caption3 Info: TeX engine: e-TeX on input line 57.
\captionmargin=\dimen128
\captionmargin@=\dimen129
\captionwidth=\dimen130
\caption@tempdima=\dimen131
\caption@indent=\dimen132
\caption@parindent=\dimen133
\caption@hangindent=\dimen134
\abovecaptionskip=\skip68
\belowcaptionskip=\skip69
Package caption Info: Unknown document class (or package),
(caption)             standard defaults will be used.
)
\c@KVtest=\count103
\sf@farskip=\skip70
\sf@captopadj=\dimen135
\sf@capskip=\skip71
\sf@nearskip=\skip72
\c@subfigure=\count104


! LaTeX Error: No counter 'figure' defined.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
? q
OK, entering \batchmode...
\c@subfigure@save=\count105
! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.


! LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Extra \endcsname.
\@ifundefined ...dafter \ifx \csname #1\endcsname 
                                                  \relax \expandafter \@firs...
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
I'm ignoring this, since I wasn't doing a \csname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Extra \endcsname.
\newcounter ...ifdefinable \csname c@#1\endcsname 
                                                  {\@definecounter {#1}}\@if...
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
I'm ignoring this, since I wasn't doing a \csname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

\c@=\count106
! Extra \endcsname.
\@definecounter ...ewcount \csname c@#1\endcsname 
                                                  \setcounter {#1}\z@ \globa...
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
I'm ignoring this, since I wasn't doing a \csname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Missing number, treated as zero.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Extra \endcsname.
<argument> ...xt@figure\endcsname depth\endcsname 
                                                  
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
I'm ignoring this, since I wasn't doing a \csname.

! Missing number, treated as zero.
<to be read again> 
                   \global 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Extra \endcsname.
\@definecounter ...r \let \csname cl@#1\endcsname 
                                                  \@empty \@addtoreset {#1}{...
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
I'm ignoring this, since I wasn't doing a \csname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Extra \endcsname.
\@definecounter ...er \let \csname p@#1\endcsname 
                                                  \@empty \expandafter \gdef...
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
I'm ignoring this, since I wasn't doing a \csname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Missing number, treated as zero.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Extra \endcsname.
<argument> ...xt@figure\endcsname depth\endcsname 
                                                  
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
I'm ignoring this, since I wasn't doing a \csname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Missing number, treated as zero.
<to be read again> 
                   \def 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Use of \the doesn't match its definition.
\caption@ifatletter ->\ifnum \the \catcode 
                                           `\@ =11 \expandafter \@firstoftwo...
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
<argument> ...lineno\endcsname {\the \inputlineno 
                                                  }
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
<write> ...=\string \count \the \allocationnumber 
                                                  
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

\c@subtable=\count

! LaTeX Error: No counter 'table' defined.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Use of \the doesn't match its definition.
<write> ...=\string \count \the \allocationnumber 
                                                  
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

\c@subtable@save=\count
! Missing \endcsname inserted.
<to be read again> 
                   \ext@table 
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@table 
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@table 
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Use of \the doesn't match its definition.
\caption@ifatletter ->\ifnum \the \catcode 
                                           `\@ =11 \expandafter \@firstoftwo...
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
\g@addto@macro ...fter {#1#2}\xdef #1{\the \toks@ 
                                                  }\endgroup 
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
<argument> ...lineno\endcsname {\the \inputlineno 
                                                  }
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
\g@addto@macro ...fter {#1#2}\xdef #1{\the \toks@ 
                                                  }\endgroup 
l.316 }
       
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
<write> ... =\string \skip \the \allocationnumber 
                                                  
l.317 \newskip\sf@top
                     
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

\sf@top=\skip
! Use of \the doesn't match its definition.
<write> ... =\string \skip \the \allocationnumber 
                                                  
l.318 \newskip\sf@bottom
                        
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

\sf@bottom=\skip
! Use of \the doesn't match its definition.
\g@addto@macro ...fter {#1#2}\xdef #1{\the \toks@ 
                                                  }\endgroup 
l.508   \let\sf@addcontentsline=\addcontentsline}
                                                 
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.


Overfull \hbox (194.95728pt too wide) in paragraph at lines 298--516
[]\T1/cmr/m/n/10 depthdepthdepthdepthdepthdepthdepth
 []

! Use of \the doesn't match its definition.
\g@addto@macro ...fter {#1#2}\xdef #1{\the \toks@ 
                                                  }\endgroup 
l.590     \fi}}
               
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
\g@addto@macro ...fter {#1#2}\xdef #1{\the \toks@ 
                                                  }\endgroup 
l.598 }
       
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
\g@addto@macro ...fter {#1#2}\xdef #1{\the \toks@ 
                                                  }\endgroup 
l.677 }
       
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

)

! LaTeX Error: Unknown option `caption=false' for package `subfig'.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.32 \usepackage
                [final]{graphicx}
The option `caption=false' was not declared in package `subfig', perhaps you
misspelled its name. Try typing  <return>  to proceed.

! Use of \the doesn't match its definition.
\@pushfilename ...ame }{\@currext }{\the \catcode 
                                                  `\@ }\@currnamestack }
l.34 \graphicspath
                  {{chapter-1/figures/}{chapter-2/figures/}{chapter-3/figure...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

 (/usr/share/texmf-dist/tex/latex/graphics/graphicx.sty
Package: graphicx 1999/02/16 v1.0f Enhanced LaTeX Graphics (DPC,SPQR)
! Use of \the doesn't match its definition.
\@declareoption ...e ds@#1\endcsname {\the \toks@ 
                                                  }
l.21 ...assOptionsToPackage\CurrentOption{keyval}}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
\@defdefault@ds ...\edef \default@ds {\the \toks@ 
                                                  }
l.22 ...sOptionsToPackage\CurrentOption{graphics}}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
\in@ ... {\in@@ #2{}{}#1}\edef \in@@ {\the \toks@ 
                                                  }\expandafter \endgroup \i...
l.24 \RequirePackage
                    {keyval,graphics}
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
\g@addto@macro ...fter {#1#2}\xdef #1{\the \toks@ 
                                                  }\endgroup 
l.24 \RequirePackage
                    {keyval,graphics}
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
\@pushfilename ...ame }{\@currext }{\the \catcode 
                                                  `\@ }\@currnamestack }
l.25 \define@key
                {Gin}{bb}
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Improper alphabetic constant.
<to be read again> 
                   \spacefactor 
l.25 \define@key
                {Gin}{bb}
A one-character control sequence belongs after a ` mark.
So I'm essentially inserting \0 here.

! Invalid code (48), should be in the range 0..15.
<to be read again> 
                   \spacefactor 
l.25 \define@key
                {Gin}{bb}
I'm going to use 0 instead of that illegal code value.

! You can't use `\spacefactor' in vertical mode.
<recently read> \spacefactor 
                             
l.25 \define@key
                {Gin}{bb}
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
l.25 \define@key
                {Gin}{bb}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


! LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.25 \define@key
                {Gin}{bb}
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.25 \define@key
                {Gin}{bb}
(That makes 100 errors; please try again.) 
Here is how much of TeX's memory you used:
 3537 strings out of 495033
 50920 string characters out of 6182221
 113726 words of memory out of 5000000
 6699 multiletter control sequences out of 15000+600000
 4403 words of font info for 15 fonts, out of 8000000 for 9000
 14 hyphenation exceptions out of 8191
 45i,1n,40p,341b,39s stack positions out of 5000i,500n,10000p,200000b,80000s

!  ==> Fatal error occurred, no output PDF file produced!
