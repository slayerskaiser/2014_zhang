% framed.sty   v 0.3   29-Jul-2001
% Copyright (C) 1992-2001 by Donald Arseneau
% These macros may be freely transmitted, reproduced, or modified
% provided that this notice is left intact.
% 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Create framed or shaded regions that can break across pages using 
% \begin{framed} ... \end{framed}    -- ordinary frame box (box at margin)
% \begin{shaded} ... \end{shaded}    -- shaded background (into margin)
%
% The "framed" environment puts the text into "\fbox" with the
% settings "\fboxrule=\FrameRule" and "\fboxsep=\FrameSep".
% You can change these lengths (using "\setlength") and you
% can even change the definition of "\FrameCommand" to use
% much fancier boxes.
%
% In fact, the "shaded" environment just redefines "\FrameCommand"
% to use "\colorbox{shadecolor}" (and you have to define the
% color "shadecolor").
%
% The contents of the framed regions are restricted: 
% Floats, footnotes, marginpars and head-line entries will be lost.
% (Some of these may be handled in a later version.)
% This package will not work with the page breaking of multicol.sty,
% or other systems that perform column-balancing.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\ProvidesPackage{framed}[2001/07/29 v 0.3: framed text with page breaks]

\newenvironment{framed}% using default \FrameCommand
  {\fram@d {\advance\hsize-\width}}%
  {\endfram@d}

\newenvironment{shaded}{%
  \def\FrameCommand{\colorbox{shadecolor}}%
  \fram@d {}}%
 {\endfram@d}

\chardef\FrameRule=\catcode`\| % for debug
\catcode`\|=\catcode`\ % %

\def\fram@d#1{\par
 \begingroup
 \skip@\lastskip
 \penalty\@M % updates \page parameters
 \ifdim\pagefilstretch=\z@ \ifdim\pagefillstretch=\z@ \if@nobreak\else
    \vskip-\skip@ \penalty-30 \vskip\skip@
 \fi\fi\fi
 \addvspace{\topsep}%
 \endgroup
 % measure added width and height; call result \width and \height
 \setbox\z@\vbox{\vskip-1in \hbox{\hskip-1in 
   \FrameCommand{\hbox{\vrule \@height 1in \@width 1in}}}\vskip\z@skip}%
 \def\width{\wd\z@}\def\height{\ht\z@}%
 \edef\fb@frw{\the\width}\edef\fb@frh{\the\height}%
 \penalty\@M \vskip 2\baselineskip \vskip\height  % clear out pending page break
 \penalty\@M \vskip -2\baselineskip \vskip-\height
 \penalty\@M % updates \pagetotal
 \fb@adjheight 
 \setbox\@tempboxa\vbox\bgroup
   #1% Modifications to \hsize (can use \width and \height)
   \textwidth\hsize \columnwidth\hsize \@parboxrestore
}

\def\endfram@d{\par
     \kern\z@ \penalty-100 % put depth into height
 \egroup
 \begingroup \put@frame \endgroup
}

% \put@frame takes the contents of \@tempboxa and puts all, or a piece,
% of it on the page with a frame (\FrameCommand).  It recurses until
% all of \@tempboxa has been used up. (\@tempboxa must have zero depth.)

\def\put@frame{\relax
|   \message{=============== Entering putframe ====================  }%
  \ifdim\pagegoal=\maxdimen \pagegoal\vsize \fi
  \dimen@\pagegoal \advance\dimen@-\pagetotal % natural space left on page
  \ifdim\dimen@>2\baselineskip % there's appreciable room left on the page
     \begingroup 
       \advance\dimen@.8\pageshrink\relax  % maximum space available on page
       \expandafter\endgroup
     \ifdim\dimen@>\ht\@tempboxa % whole box does fit
|     \message{Box of size \the\ht\@tempboxa\space fits in \the\dimen@:
|       \string\pagetotal=\the\pagetotal,
|       \string\pagegoal=\the\pagegoal,
|       \string\pagestretch=\the\pagestretch,
|       \string\pageshrink=\the\pageshrink. }%
      \else % box must be split
|      \message{Box of size \the\ht\@tempboxa\space 
|          must be split to fit in \the\dimen@:}%
|      \message{\string\pagetotal=\the\pagetotal, 
|        \string\pagegoal=\the\pagegoal, 
|        \string\pagestretch=\the\pagestretch,
|        \string\pageshrink=\the\pageshrink,
|        \string\fb@frh=\fb@frh. \space}
        \setbox\@tempboxa\vbox{% simulate frame and flexiblity of the page:
           \vskip \fb@frh \@plus\pagestretch \@minus.8\pageshrink
           \kern137sp\kern-137sp\penalty-30 
           \unvbox\@tempboxa}%
        \boxmaxdepth\z@ \splittopskip\z@
|       \message{Box of size \the\ht\@tempboxa\space is split to \the\dimen@. }%
        \setbox\tw@\vsplit\@tempboxa to\dimen@
        \setbox\tw@\vbox{\unvbox\tw@}% natural-sized
|       \message{Natural height of split box is \the\ht\tw@. }%
%       If the split-to size > (\vsize-\topskip), then set box to full size
        \begingroup
          \advance\dimen@\topskip
          \expandafter\endgroup
        \ifdim\dimen@>\pagegoal
|         \message{Frame is big -- Use up the full column. }%
          \dimen@ii\pagegoal
          \advance\dimen@ii -\topskip
          \advance\dimen@ii \FrameHeightAdjust\relax
        \else
          \advance\dimen@.8\pageshrink
          \ifdim\ht\tw@>\dimen@ii
|           \message{Box too tall; rebox it to \the\dimen@. }%
            \dimen@ii\dimen@
          \else % use natural size
            \dimen@ii\ht\tw@
          \fi
        \fi
        \advance\dimen@ii -\fb@frh
        \setbox\tw@\vbox to\dimen@ii \bgroup
        \vskip -\fb@frh \@plus-\pagestretch \@minus-.8\pageshrink
        \unvbox\tw@
        \ifdim\lastkern=-137sp % whole box went to next page
|          \message{box split at beginning! }%
           \egroup \eject % (\vskip for frame size was discarded) 
           \fb@adjheight
        \else %
           \egroup
           \ifvoid\@tempboxa % it all fit after all
|             \message{box split at end! }%
              \setbox\@tempboxa\box\tw@
           \else % it really did split
|             \message{box split as expected. Its reboxed height is \the\ht\tw@. }%
              \centerline{\FrameCommand{\box\tw@}}%
              \hrule \@height\z@
              \eject
              \fb@adjheight
              \put@frame
  \fi\fi\fi\fi
  \ifvoid\@tempboxa\else
    \centerline{\FrameCommand{\box\@tempboxa}}%
    \nointerlineskip \null
    \penalty-30 \vskip\topsep
  \fi}

\def\fb@adjheight{%
  \vbox to\FrameHeightAdjust{}% get proper baseline skip from above.
  \penalty\@M \nointerlineskip
  \vskip-\FrameHeightAdjust
  \penalty\@M} % useful for tops of pages

\catcode`\|=\FrameRule
\providecommand\FrameCommand{\fboxrule=\FrameRule \fboxsep=\FrameSep \fbox}
\newdimen\FrameRule \FrameRule= \fboxrule
\newdimen\FrameSep  \FrameSep = 3\fboxsep

% Height of frame above first baseline when frame starts a page:
\providecommand\FrameHeightAdjust{6pt}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
